{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\txsmi\\\\source\\\\repos\\\\Baddies\\\\frontend\\\\src\\\\Movies.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from './MovieDataSample.json';\n// We call this data, that's our own name for it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst movieDataSet = data.MovieDataSampleList; // Grab this name from the attribute in JSON file\n\nfunction MovieList() {\n  _s();\n  const [listOMovies, setListOMovies] = useState(movieDataSet);\n  // We are setting the state here equal to the original list of movies.\n  // This is the hook where we set the inital state.\n\n  const addMovie = () => {\n    setListOMovies([...movieDataSet,\n    // First thing that comes in is what was in\n    // the original state.\n    // Second thing that comes in is the new object to be created\n    {\n      Category: 'Action/Adventure',\n      Title: 'Batman Returns',\n      Year: 1992,\n      Director: 'Tim Burton',\n      Rating: 'PG-13'\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Joel Hilton Movie Colleciton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: movieDataSet.map(m => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Director\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: m.Category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieList, \"QgcK/JET99yR4jfoQXBrPgjt664=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","movieDataSet","MovieDataSampleList","MovieList","_s","listOMovies","setListOMovies","addMovie","Category","Title","Year","Director","Rating","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","m","onClick","_c","$RefreshReg$"],"sources":["C:/Users/txsmi/source/repos/Baddies/frontend/src/Movies.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport data from './MovieDataSample.json';\r\n// We call this data, that's our own name for it\r\n\r\nconst movieDataSet = data.MovieDataSampleList; // Grab this name from the attribute in JSON file\r\n\r\nfunction MovieList() {\r\n  const [listOMovies, setListOMovies] = useState(movieDataSet);\r\n  // We are setting the state here equal to the original list of movies.\r\n  // This is the hook where we set the inital state.\r\n\r\n  const addMovie = () => {\r\n    setListOMovies([\r\n      ...movieDataSet, // First thing that comes in is what was in\r\n      // the original state.\r\n      // Second thing that comes in is the new object to be created\r\n      {\r\n        Category: 'Action/Adventure',\r\n        Title: 'Batman Returns',\r\n        Year: 1992,\r\n        Director: 'Tim Burton',\r\n        Rating: 'PG-13',\r\n      }, \r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3>Joel Hilton Movie Colleciton</h3>\r\n      </div>\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Year</th>\r\n            <th>Director</th>\r\n            <th>Rating</th>\r\n            <th>Category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {movieDataSet.map((m) => (\r\n            <tr>\r\n              <td>{m.Title}</td>\r\n              <td>{m.Year}</td>\r\n              <td>{m.Director}</td>\r\n              <td>{m.Rating}</td>\r\n              <td>{m.Category}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <button className=\"btn btn-primary\" onClick=\"\"></button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}